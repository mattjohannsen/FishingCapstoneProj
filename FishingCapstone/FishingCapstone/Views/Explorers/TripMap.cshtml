@model FishingCapstone.Models.Explorer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout-Explorer.cshtml";

}

<h1>My Fishing Trips</h1>

<div>
    <h4>@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</h4>
</div>
@*@foreach (var trip in Model.Trips)
    {
        <b>@trip.Destination.DestinationName</b>
        <br>
    }*@
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>
<!--The div element for the map -->
<div id="map"></div>
<script>
    // Initialize and add the map
    function initMap() {
        // The location of Uluru
        var uluru = { lat: -25.344, lng: 131.036 };
        // The map, centered at Uluru
        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: 4, center: uluru });
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({ position: uluru, map: map });
    }
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=@APIKEYS.GoogleAPIKey&callback=initMap">
</script>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ExplorerId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
